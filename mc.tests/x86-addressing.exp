
set suite {
    {x86-64} {0x48,0xa3,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00} {*\[0xA:64 + 0x4:64, el\]*} {ADDR = RIP + offset}
    {x86-64} {0x67,0x89,0x45,0x00} {*\[pad:64\[low:32\[RBP\]\], el\]*} {ADDR = BASE32}
    {x86-64} {0x48,0x89,0x45,0x00} {*\[RBP, el\]*} {ADDR = BASE64}
    {x86-64} {0x48,0x89,0x44,0x15,0x00} {*\[RBP + RDX, el\]*} {ADDR = BASE64 + INDEX64}
    {x86-64} {0x48,0x89,0x44,0x55,0x00} {*\[RBP + (RDX << 0x1:2), el\]*} {ADDR = BASE64 + 2*INDEX64}
    {x86-64} {0x48,0x89,0x44,0x95,0x00} {*\[RBP + (RDX << 0x2:2), el\]*} {ADDR = BASE64 + 4*INDEX64}
    {x86-64} {0x48,0x89,0x44,0xd5,0x00} {*\[RBP + (RDX << 0x3:2), el\]*} {ADDR = BASE64 + 8*INDEX64}
    {x86-64} {0x48,0x89,0x45,0x04} {*\[RBP + 0x4:64, el\]*} {ADDR = BASE64 + disp}
    {x86-64} {0x48,0x89,0x44,0x15,0x04} {*\[(RBP + RDX) + 0x4:64, el\]*} {ADDR = BASE64 + INDEX64 + disp}
    {x86-64} {0x48,0x89,0x44,0x55,0x04} {*\[(RBP + (RDX << 0x1:2)) + 0x4:64, el\]*} {ADDR = BASE64 + 2*INDEX64 + disp}
    {x86-64} {0x48,0x89,0x44,0x95,0x04} {*\[(RBP + (RDX << 0x2:2)) + 0x4:64, el\]*} {ADDR = BASE64 + 4*INDEX64 + disp}
    {x86-64} {0x48,0x89,0x44,0xd5,0x04} {*\[(RBP + (RDX << 0x3:2)) + 0x4:64, el\]*} {ADDR = BASE64 + 8*INDEX64 + disp}
    {x86-64} {0x48,0x89,0x3c,0x05,0x00,0x00,0x00,0x00} {*\[RAX, el\]*} {ADDR = INDEX64}
    {x86-64} {0x48,0x89,0x3c,0x45,0x00,0x00,0x00,0x00} {*\[RAX << 0x1:2, el\]*} {ADDR = 2*INDEX64}
    {x86-64} {0x48,0x89,0x3c,0x85,0x00,0x00,0x00,0x00} {*\[RAX << 0x2:2, el\]*} {ADDR = 4*INDEX64}
    {x86-64} {0x48,0x89,0x3c,0xc5,0x00,0x00,0x00,0x00} {*\[RAX << 0x3:2, el\]*} {ADDR = 8*INDEX64}
    {x86-64} {0x48,0x89,0x3c,0x05,0x04,0x00,0x00,0x00} {*\[RAX + 0x4:64, el\]*} {ADDR = INDEX64 + disp}
    {x86-64} {0x48,0x89,0x3c,0x45,0x04,0x00,0x00,0x00} {*\[(RAX << 0x1:2) + 0x4:64, el\]*} {ADDR = 2*INDEX64 + disp}
    {x86-64} {0x48,0x89,0x3c,0x85,0x04,0x00,0x00,0x00} {*\[(RAX << 0x2:2) + 0x4:64, el\]*} {ADDR = 4*INDEX64 + disp}
    {x86-64} {0x48,0x89,0x3c,0xc5,0x04,0x00,0x00,0x00} {*\[(RAX << 0x3:2) + 0x4:64, el\]*} {ADDR = 8*INDEX64 + disp}
    {x86-64} {0x48,0x89,0x3d,0x00,0x00,0x00,0x00} {*\[0x7:64, el\]*} {ADDR = RIP}
    {x86-64} {0x48,0x89,0x3d,0x04,0x00,0x00,0x00} {*\[0x7:64 + 0x4:64, el\]*} {ADDR = RIP + disp}
}

foreach {arch code bil form} $suite {
    set test "x86.addressing.$arch.\[$form\]"
    spawn bap-mc --arch=$arch --x86-lifter=modern --show-bil=pretty $code
    expect {
        "$bil" { pass $test }
        default {fail $test}
    }
}
